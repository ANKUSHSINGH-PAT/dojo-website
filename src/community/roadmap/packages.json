{
	"packages": [
		{
			"title":"loader",
			"description":"A minimal bootstrap for TypeScript and JavaScript libraries that loads modules in AMD, CJS, and eventually ES2015 formats.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{

			"title":"platform",
			"description":"A minimal base package for JavaScript and TypeScript libraries to detect and extend platform and language runtime features.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"class declaration",
			"description":"Utilties for defining class hierarchies, including multiple inheritance.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"async",
			"description":"Support for various asynchronous programming styles. async extends the native ES6 Promise API with useful helpers and also provides support for working with ES6 generators as 'async functions'.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"core",
			"description":"A collection of core standard library features that all applications should expect to be able to use.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"stream",
			"description":"APIs for creating, consuming and transforming streams of data, based on the current WHATWG streams specification.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"io",
			"description":"An API for working with input/ouput (io) operations including HTTP requests, filesystem access, sockets, workers, and other APIs as available.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"events",
			"description":"Utilities for consistent event handling including browser events, topics, and Aspect-Oriented Programming, and higher level utilities including debounce, throttle, event delegation, and key mappings.  ",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"dom/html",
			"description":"Utilities for DOM manipulation in browser runtimes.  It encourages (and shims) standard DOM methods where possible, but it provides utilities to make common and recommended use cases easy and obvious, and harder use cases less painful.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"i18n/g14n/l10n/bidi",
			"description":"Functionality necessary for localising applications.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"crypto",
			"description":"User-friendly, cross-platform, extensible cryptographic API. Initially includes a set of hashing and signing algorithms to support common use cases like OAuth and AWS request validation. crypto makes working with cryptographic algorithms easier by providing a consistent cross-platform API for accessing native cryptographic functionality.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"history/routing",
			"description":"Base API for managing navigation and history via path based hash changes and the HTML5 History API, and higher level routing management.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"dstore",
			"description":"Data infrastructure framework providing the tools for modelling and interacting with data collections and objects. Works with a variety of data storage mediums, and provides a consistent interface for accessing data across different user interface components.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		},
		{
			"title":"parser",
			"description":"A package for processing a DOM into objects.",
			"status":"planning",
			"specUrl": "",
			"githubUrl": ""
		}
	]
}